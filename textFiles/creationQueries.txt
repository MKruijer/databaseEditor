CREATE SEQUENCE IF NOT EXISTS modified_arch_issues_all_emails_id_seq
    as integer;

CREATE SEQUENCE IF NOT EXISTS modified_arch_emails_all_issues_id_seq
    as integer;

CREATE TABLE IF NOT EXISTS modified_arch_issues_all_emails
(
id integer default nextval('modified_arch_issues_all_emails_id_seq'::regclass) not null primary key,
    email_id integer not null,
    issue_key text not null,
    similarity numeric,
    email_date timestamp,
    issue_created timestamp,
    issue_modified timestamp,
    email_word_count integer,
    issue_description_word_count integer,
    email_thread_id integer,
    issue_parent_key text,
    creation_time_difference integer
);

CREATE TABLE IF NOT EXISTS modified_arch_emails_all_issues
(
id integer default nextval('modified_arch_emails_all_issues_id_seq'::regclass) not null primary key,
    email_id integer not null,
    issue_key text not null,
    similarity numeric,
    email_date timestamp,
    issue_created timestamp,
    issue_modified timestamp,
    email_word_count integer,
    issue_description_word_count integer,
    email_thread_id integer,
    issue_parent_key text,
    creation_time_difference integer
);

INSERT INTO modified_arch_emails_all_issues (email_id, issue_key, similarity)
SELECT email_id, issue_key, similarity FROM result_arch_emails_all_issues WHERE similarity > 0.1;

INSERT INTO modified_arch_issues_all_emails (email_id, issue_key, similarity)
SELECT email_id, issue_key, similarity FROM result_arch_issues_all_emails WHERE similarity > 0.1;


CREATE TABLE unique_email_thread_arch_issue_all_email AS
SELECT t.*
FROM (
  SELECT email_thread_id, issue_key, MAX(similarity) AS max_similarity
  FROM modified_arch_issues_all_emails
  GROUP BY email_thread_id, issue_key
) AS subq
JOIN modified_arch_issues_all_emails AS t
  ON t.email_thread_id = subq.email_thread_id
  AND t.issue_key = subq.issue_key
  AND t.similarity = subq.max_similarity
ORDER BY t.similarity DESC;


CREATE TABLE unique_email_thread_arch_email_all_issue AS
SELECT t.*
FROM (
  SELECT email_thread_id, issue_key, MAX(similarity) AS max_similarity
  FROM modified_arch_emails_all_issues
  GROUP BY email_thread_id, issue_key
) AS subq
JOIN modified_arch_emails_all_issues AS t
  ON t.email_thread_id = subq.email_thread_id
  AND t.issue_key = subq.issue_key
  AND t.similarity = subq.max_similarity
ORDER BY t.similarity DESC;